{"mappings":"C,A,WC+DA,SAAS,EAAU,CAAmB,EAAjB,IAAA,EAAF,EAAE,QAAA,CAAU,EAAZ,EAAY,KAAV,CACnB,QAAQ,GAAA,CAAI,mBAAkC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MACtD,CAEA,SAAS,EAAQ,CAAmB,EAAjB,IAAA,EAAF,EAAE,QAAA,CAAU,EAAZ,EAAY,KAAV,CACjB,QAAQ,KAAA,CAAM,oBAAmC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MACzD,CApEA,AADa,SAAS,aAAA,CAAc,SAC/B,gBAAA,CAAiB,SAEtB,SAAoB,CAAK,EACvB,EAAM,cAAN,GAEA,IAa2B,EAAO,EAAM,EAblC,EAAW,OAAO,WAAA,CAAY,AADnB,IAAI,SAAS,EAAM,aAApC,EAC6C,OAA7C,GACA,CAAA,EAAS,QAAA,CAAW,SAAS,EAAS,QAAtC,EACA,EAAS,KAAA,CAAQ,SAAS,EAAS,KAAnC,EACA,EAAS,IAAA,CAAO,SAAS,EAAS,IAAlC,EACA,EAAS,MAAA,CAAS,SAAS,EAAS,MAApC,EAEA,CAO2B,EAAF,AAPP,EAOS,KAAA,CAAO,EAAT,AAPP,EAOgB,IAAA,CAAM,EAAf,AAPP,EAOsB,MAAb,CACpB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAI,EAAe,EACb,EAAU,EAAE,EAuBlB,AArBA,SAAS,EAAQ,CAAQ,MAyBN,EAAE,EAAU,EAC3B,EAzBF,GAAI,EAAW,EAAQ,CACrB,EAAQ,GACR,MACF,CAEA,CAmBmB,EAAF,CAAA,EAnBH,CAAE,SAAA,EAAU,MAAO,CAAa,GAmB3B,QAAA,CAAU,EAAZ,EAAY,KAAV,CACjB,EAAgB,KAAK,MAAA,GAAW,GAE/B,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,IA7BO,IAAA,CAAK,SAAC,CADqC,EAE1C,EAAQ,IAAA,CAAK,GACb,EAAU,EACZ,GACC,KAAA,CAAM,SAAC,CADR,EAEE,EAAQ,IAAA,CAAK,GACb,EAAQ,EACV,GACC,OAAA,CAAQ,WACP,GAAgB,EAChB,EAAQ,EAAW,EACrB,EACJ,EAEQ,EACV,IAjCG,IAAA,CAAK,SAAC,CADT,EAEI,EAAQ,OAAA,CAAQ,EAClB,GACC,KAAA,CAAM,EACX,E","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["(function () {\nvar $ce04d3a99e08e73b$exports = {};\nvar $ce04d3a99e08e73b$var$form = document.querySelector(\".form\");\n$ce04d3a99e08e73b$var$form.addEventListener(\"submit\", $ce04d3a99e08e73b$var$onBtnClick);\nfunction $ce04d3a99e08e73b$var$onBtnClick(event) {\n    event.preventDefault();\n    var formData = new FormData(event.currentTarget);\n    var formInfo = Object.fromEntries(formData.entries());\n    formInfo.position = parseInt(formInfo.position);\n    formInfo.delay = parseInt(formInfo.delay);\n    formInfo.step = parseInt(formInfo.step);\n    formInfo.amount = parseInt(formInfo.amount);\n    $ce04d3a99e08e73b$var$createNewPromises(formInfo).then(function(results) {\n        results.forEach($ce04d3a99e08e73b$var$onSuccess);\n    }).catch($ce04d3a99e08e73b$var$onError);\n}\nfunction $ce04d3a99e08e73b$var$createNewPromises(param) {\n    var delay = param.delay, step = param.step, amount = param.amount;\n    return new Promise(function(resolve, reject) {\n        var currentDelay = delay;\n        var results = [];\n        function iterate(position) {\n            if (position > amount) {\n                resolve(results);\n                return;\n            }\n            $ce04d3a99e08e73b$var$createPromise({\n                position: position,\n                delay: currentDelay\n            }).then(function(result) {\n                results.push(result);\n                $ce04d3a99e08e73b$var$onSuccess(result);\n            }).catch(function(error) {\n                results.push(error);\n                $ce04d3a99e08e73b$var$onError(error);\n            }).finally(function() {\n                currentDelay += step;\n                iterate(position + 1);\n            });\n        }\n        iterate(1);\n    });\n}\nfunction $ce04d3a99e08e73b$var$createPromise(param) {\n    var position = param.position, delay = param.delay;\n    var shouldResolve = Math.random() > 0.3;\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\nfunction $ce04d3a99e08e73b$var$onSuccess(param) {\n    var position = param.position, delay = param.delay;\n    console.log(\"Resolve promise \".concat(position, \" in \").concat(delay, \"ms\"));\n}\nfunction $ce04d3a99e08e73b$var$onError(param) {\n    var position = param.position, delay = param.delay;\n    console.error(\"Rejected promise \".concat(position, \" in \").concat(delay, \"ms\"));\n}\n\n})();\n//# sourceMappingURL=03-promises.da8ae1d1.js.map\n","const form = document.querySelector('.form');\nform.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(event) {\n  event.preventDefault();\n  const formData = new FormData(event.currentTarget);\n  const formInfo = Object.fromEntries(formData.entries());\n  formInfo.position = parseInt(formInfo.position);\n  formInfo.delay = parseInt(formInfo.delay);\n  formInfo.step = parseInt(formInfo.step);\n  formInfo.amount = parseInt(formInfo.amount);\n\n  createNewPromises(formInfo)\n    .then((results) => {\n      results.forEach(onSuccess);\n    })\n    .catch(onError);\n}\n\nfunction createNewPromises({ delay, step, amount }) {\n  return new Promise((resolve, reject) => {\n    let currentDelay = delay;\n    const results = [];\n\n    function iterate(position) {\n      if (position > amount) {\n        resolve(results);\n        return;\n      }\n\n      createPromise({ position, delay: currentDelay })\n        .then((result) => {\n          results.push(result);\n          onSuccess(result);\n        })\n        .catch((error) => {\n          results.push(error);\n          onError(error);\n        })\n        .finally(() => {\n          currentDelay += step;\n          iterate(position + 1);\n        });\n    }\n\n    iterate(1);\n  });\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  console.log(`Resolve promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  console.error(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$ce04d3a99e08e73b$var$onSuccess","param","position","delay","console","log","concat","$ce04d3a99e08e73b$var$onError","error","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","step","amount","formInfo","Object","fromEntries","formData","FormData","currentTarget","entries","parseInt","$ce04d3a99e08e73b$var$createNewPromises","Promise","resolve","reject","currentDelay","results","iterate","shouldResolve","$ce04d3a99e08e73b$var$createPromise","Math","random","setTimeout","then","result","push","catch","finally","forEach"],"version":3,"file":"03-promises.da8ae1d1.js.map"}