{"mappings":"ACAA,MAAM,EAAO,SAAS,aAAA,CAAc,SA+DpC,SAAS,EAAU,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EACpC,QAAQ,GAAA,CAAI,CAAC,gBAAgB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CACzD,CAEA,SAAS,EAAQ,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EAClC,QAAQ,KAAA,CAAM,CAAC,iBAAiB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC5D,CApEA,EAAK,gBAAA,CAAiB,SAEtB,SAAoB,CAAK,EACvB,EAAM,cAAN,GACA,IAAM,EAAW,IAAI,SAAS,EAAM,aAApC,EACM,EAAW,OAAO,WAAA,CAAY,EAAS,OAA7C,GACA,CAAA,EAAS,QAAA,CAAW,SAAS,EAAS,QAAtC,EACA,EAAS,KAAA,CAAQ,SAAS,EAAS,KAAnC,EACA,EAAS,IAAA,CAAO,SAAS,EAAS,IAAlC,EACA,EAAS,MAAA,CAAS,SAAS,EAAS,MAApC,EAEA,AAOF,CAAA,SAA2B,CAAA,MAAE,CAAA,CAAK,KAAE,CAAA,CAAI,OAAE,CAAA,CAAQ,EAChD,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAI,EAAe,EACb,EAAU,EAAE,EAuBlB,AArBA,SAAS,EAAQ,CAAQ,EACvB,GAAI,EAAW,EAAQ,CACrB,EAAQ,GACR,MACF,CAEA,AAmBN,CAAA,SAAuB,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EACxC,IAAM,EAAgB,KAAK,MAAA,GAAW,GAEtC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,WAAW,KACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EA/BoB,CAAE,SAAA,EAAU,MAAO,CAAa,GAC3C,IAAA,CAAK,AAAC,IACL,EAAQ,IAAA,CAAK,GACb,EAAU,EACZ,GACC,KAAA,CAAM,AAAC,IACN,EAAQ,IAAA,CAAK,GACb,EAAQ,EACV,GACC,OAAA,CAAQ,KACP,GAAgB,EAChB,EAAQ,EAAW,EACrB,EACJ,EAEQ,EACV,EACF,CAAA,EAnCoB,GACf,IAAA,CAAK,AAAC,IACL,EAAQ,OAAA,CAAQ,EAClB,GACC,KAAA,CAAM,EACX","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["var $47d4ff9957288465$exports = {};\nconst $47d4ff9957288465$var$form = document.querySelector(\".form\");\n$47d4ff9957288465$var$form.addEventListener(\"submit\", $47d4ff9957288465$var$onBtnClick);\nfunction $47d4ff9957288465$var$onBtnClick(event) {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const formInfo = Object.fromEntries(formData.entries());\n    formInfo.position = parseInt(formInfo.position);\n    formInfo.delay = parseInt(formInfo.delay);\n    formInfo.step = parseInt(formInfo.step);\n    formInfo.amount = parseInt(formInfo.amount);\n    $47d4ff9957288465$var$createNewPromises(formInfo).then((results)=>{\n        results.forEach($47d4ff9957288465$var$onSuccess);\n    }).catch($47d4ff9957288465$var$onError);\n}\nfunction $47d4ff9957288465$var$createNewPromises({ delay: delay , step: step , amount: amount  }) {\n    return new Promise((resolve, reject)=>{\n        let currentDelay = delay;\n        const results = [];\n        function iterate(position) {\n            if (position > amount) {\n                resolve(results);\n                return;\n            }\n            $47d4ff9957288465$var$createPromise({\n                position: position,\n                delay: currentDelay\n            }).then((result)=>{\n                results.push(result);\n                $47d4ff9957288465$var$onSuccess(result);\n            }).catch((error)=>{\n                results.push(error);\n                $47d4ff9957288465$var$onError(error);\n            }).finally(()=>{\n                currentDelay += step;\n                iterate(position + 1);\n            });\n        }\n        iterate(1);\n    });\n}\nfunction $47d4ff9957288465$var$createPromise({ position: position , delay: delay  }) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\nfunction $47d4ff9957288465$var$onSuccess({ position: position , delay: delay  }) {\n    console.log(`Resolve promise ${position} in ${delay}ms`);\n}\nfunction $47d4ff9957288465$var$onError({ position: position , delay: delay  }) {\n    console.error(`Rejected promise ${position} in ${delay}ms`);\n}\n\n\n//# sourceMappingURL=03-promises.695c7bc5.js.map\n","const form = document.querySelector('.form');\nform.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(event) {\n  event.preventDefault();\n  const formData = new FormData(event.currentTarget);\n  const formInfo = Object.fromEntries(formData.entries());\n  formInfo.position = parseInt(formInfo.position);\n  formInfo.delay = parseInt(formInfo.delay);\n  formInfo.step = parseInt(formInfo.step);\n  formInfo.amount = parseInt(formInfo.amount);\n\n  createNewPromises(formInfo)\n    .then((results) => {\n      results.forEach(onSuccess);\n    })\n    .catch(onError);\n}\n\nfunction createNewPromises({ delay, step, amount }) {\n  return new Promise((resolve, reject) => {\n    let currentDelay = delay;\n    const results = [];\n\n    function iterate(position) {\n      if (position > amount) {\n        resolve(results);\n        return;\n      }\n\n      createPromise({ position, delay: currentDelay })\n        .then((result) => {\n          results.push(result);\n          onSuccess(result);\n        })\n        .catch((error) => {\n          results.push(error);\n          onError(error);\n        })\n        .finally(() => {\n          currentDelay += step;\n          iterate(position + 1);\n        });\n    }\n\n    iterate(1);\n  });\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  console.log(`Resolve promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  console.error(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$onSuccess","position","delay","console","log","$47d4ff9957288465$var$onError","error","addEventListener","event","preventDefault","formData","FormData","currentTarget","formInfo","Object","fromEntries","entries","parseInt","step","amount","$47d4ff9957288465$var$createNewPromises","Promise","resolve","reject","currentDelay","results","iterate","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","setTimeout","then","result","push","catch","finally","forEach"],"version":3,"file":"03-promises.695c7bc5.js.map"}