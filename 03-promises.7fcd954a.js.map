{"mappings":"ACAA,MAAM,EAAO,SAAS,aAAA,CAAc,SAYpC,eAAe,EAAkB,CAAA,MAAE,CAAA,CAAK,KAAE,CAAA,CAAI,OAAE,CAAA,CAAQ,EACtD,IAAI,EAAe,EAEnB,IAAK,IAAI,EAAW,EAAG,GAAY,EAAQ,IAAY,CACrD,GAAI,CACF,IAAM,EAAS,MAAM,AAS3B,SAAuB,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EACxC,IAAM,EAAgB,KAAK,MAAA,GAAW,GAEtC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,WAAW,KACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,EArByC,CAAE,SAAA,EAAU,MAAO,CAAa,IACnE,AAsBN,SAAmB,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EACpC,QAAQ,GAAA,CAAI,CAAC,kBAAkB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC3D,EAxBgB,EACZ,CAAE,MAAO,EAAO,EACd,AAwBN,SAAiB,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,EAClC,QAAQ,KAAA,CAAM,CAAC,iBAAiB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC5D,EA1Bc,EACV,CACA,GAAgB,CAClB,CACF,CAvBA,EAAK,gBAAA,CAAiB,SAEtB,SAAoB,CAAK,EACvB,EAAM,cAAN,GACA,IAAM,EAAW,IAAI,SAAS,EAAM,aAApC,EACM,EAAW,OAAO,WAAA,CAAY,EAAS,OAA7C,GACA,CAAA,EAAS,QAAA,CAAW,SAAS,EAAS,QAAtC,EAEA,EAAkB,EACpB","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["var $47d4ff9957288465$exports = {};\nconst $47d4ff9957288465$var$form = document.querySelector(\".form\");\n$47d4ff9957288465$var$form.addEventListener(\"submit\", $47d4ff9957288465$var$onBtnClick);\nfunction $47d4ff9957288465$var$onBtnClick(event) {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const formInfo = Object.fromEntries(formData.entries());\n    formInfo.position = parseInt(formInfo.position);\n    $47d4ff9957288465$var$createNewPromises(formInfo);\n}\nasync function $47d4ff9957288465$var$createNewPromises({ delay: delay , step: step , amount: amount  }) {\n    let currentDelay = delay;\n    for(let position = 1; position <= amount; position++){\n        try {\n            const result = await $47d4ff9957288465$var$createPromise({\n                position: position,\n                delay: currentDelay\n            });\n            $47d4ff9957288465$var$onSuccess(result);\n        } catch (error) {\n            $47d4ff9957288465$var$onError(error);\n        }\n        currentDelay += step;\n    }\n}\nfunction $47d4ff9957288465$var$createPromise({ position: position , delay: delay  }) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\nfunction $47d4ff9957288465$var$onSuccess({ position: position , delay: delay  }) {\n    console.log(`Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction $47d4ff9957288465$var$onError({ position: position , delay: delay  }) {\n    console.error(`Rejected promise ${position} in ${delay}ms`);\n}\n\n\n//# sourceMappingURL=03-promises.7fcd954a.js.map\n","const form = document.querySelector('.form');\nform.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(event) {\n  event.preventDefault();\n  const formData = new FormData(event.currentTarget);\n  const formInfo = Object.fromEntries(formData.entries());\n  formInfo.position = parseInt(formInfo.position);\n\n  createNewPromises(formInfo);\n}\n\nasync function createNewPromises({ delay, step, amount }) {\n  let currentDelay = delay;\n\n  for (let position = 1; position <= amount; position++) {\n    try {\n      const result = await createPromise({ position, delay: currentDelay });\n      onSuccess(result);\n    } catch (error) {\n      onError(error);\n    }\n    currentDelay += step;\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  console.log(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  console.error(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createNewPromises","delay","step","amount","currentDelay","position","result","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSuccess","console","log","error","$47d4ff9957288465$var$onError","addEventListener","event","preventDefault","formData","FormData","currentTarget","formInfo","Object","fromEntries","entries","parseInt"],"version":3,"file":"03-promises.7fcd954a.js.map"}